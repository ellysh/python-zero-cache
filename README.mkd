Python-zero-cache 1.5 version
======================

INTRODUCTION
------------

Python-zero-cache is a Python bindings for the zero-cache memory caching system
based on ZMQ messaging library.

BUILDING
--------

You need the C++ compiler, SWIG and ZMQ library to build this software.
Also the source code of the zero-cache system is needed.

1. Check what symlinks to zero-cache sources in `source` directory of the python-zero-cache project is
   correct.<br/>

2. Build binaries with GNU Make. Type this command in the project root directory:

    $ make

4. Build debian package if you use Debian-based Linux distribution:

    $ make deb

You can find debian packages in the `python-zero-cache/deb` directory.

INSTALLING
----------

Debian-based Linux distribution users can install debian packages from
`python-zero-cache/deb` directory.

Another way is installing with Makefile default mechanism:

    $ make install

USAGE
-----

First of all you must launch zero-cache service. This is example for Unix socket based
connection:

    $ zero-cache -l /var/log/zero-cache.log -c "ipc:///tmp/0" -s 1000 -k 10

**Please note that Unix socket file name must have number format.**

This is example for TCP socket based connection:

    $ zero-cache -l /var/log/zero-cache.log -c "tcp://*:5570" -s 1000 -k 10

The command line arguments information is available by command:

    $ zero-cache -h

Your client application must import the `registrar_client` module to access
zero-cache classes.

This is example of typical client application for Unix socket based connection:

    #!/usr/bin/env python

    import client_wrap

    client = client_wrap.ClientWrap("get_test.log", "ipc:///var/run/zero-cache/0", 0)

    key = "key1"
    data = "test data 1"

    client.WriteString(key, data)
    result = client.ReadString(key)

This is example of typical client application for TCP socket based connection:

    #!/usr/bin/env python

    import client_wrap

    client = client_wrap.ClientWrap("tcp_test.log", "tcp://localhost:5570", 0)

    key = "key1"
    data = "test data 1"

    client.WriteString(key, data)
    result = client.ReadString(key)

More usage examples you can find in files of `test` directory.

COPYING
-------

Free use of this software is granted under the terms of the GNU Lesser General
Public License (LGPL). For details see the file `LICENSE` included with the zero-cache distribution.
